local awful     = require("awful")
local wibox     = require("wibox")
local beautiful = require("beautiful")
local radical   = require("radical")
local common    = require("compact.common")
local appmenu   = require("compact.menu.appmenu")

local module = {}

-- Main menu table
module.mapp = {}
module.mapp = appmenu (
            { -- Main menu
                filter      = true,
                show_filter = true,
                max_items   = 20,
                style       = radical.style.classic,
                item_style  = radical.item.style.classic
            }
           ,{ -- Sub menus
                max_items   = 20,
                style       = radical.style.classic,
                item_style  = radical.item.style.classic
            })
        
        return appmenu
    



--passed = applicationsmenu[1]
--function applicationsmenu() return passed end
-- Quick menu table.
module.qapp = {}
module.qapp["Terminal"]     = { command="urxvt",       key="t", icon="terminal.svg",         tag=1 }
module.qapp["File Manager"] = { command="thunar",      key="f", icon="file-manager.svg",     tag=1 }
module.qapp["Web browser"]  = { command="qupzilla",    key="w", icon="browser.svg",          tag=3 }
module.qapp["Editor"]       = { command="geany",       key="e", icon="editor.svg",           tag=2 }
module.qapp["MOC"]          = { command="xterm -e mocp",  key="m", icon="thunderbird.svg",             tag=6 }
module.qapp["Торент"]       = { command="qbittorrent", key="q", icon="qbittorrent.png",      tag=4 }
module.qapp["Gscrot"]       = { command="gscrot",      key="s", icon="record.png",                 }
module.qapp["Vimb"]         = { command="vimb",        key="v", icon="irc.svg",              tag=3 }
module.qapp["Изображения"]  = { command="ristretto",   key="k", icon="applications-graphics.svg",       tag=5 }
module.qapp["Gimp"]         = { command="gimp",        key="g", icon="proc.svg",             tag=5 }

-- Main menu builder
module.menu_visible = false
function module.main_app()
    if module.menu_visible and module.menu_app then
        module.menu_app:hide()
        module.menu_visible = false
        return
    elseif not module.menu_visible and not module.menu_app then
        local menu_items = {}
        local function submenu(t)
            local submenus = {}
            for i,_ in pairs(t) do
                table.insert(submenus,{t[i].name, t[i].command, beautiful.path.."/launcher/app/"..t[i].icon or beautiful.unknown})
            end
            return submenus
        end
        for k,v in pairs(module.mapp) do
            table.insert(menu_items, {k, submenu(v.items), beautiful.path.."/launcher/"..v.icon or beautiful.unknown})
        end
        module.menu_app = awful.menu.new({items=menu_items,theme={height=18,width=140}})
    end
    module.menu_app:show()
    module.menu_visible = true
end

-- Action
local function run(data)
    local tags = awful.tag.gettags(1)
    awful.util.spawn(data.command)
    if tags[data.tag] then awful.tag.viewonly(tags[data.tag]) end
    common.hide_menu(module.menu_qapp)common.hide_menu(module.menu_qapp)
end

-- Quick menu builder
module.menu_qapp = false
function module.main_qapp()
    if not module.menu_qapp then
        module.menu_qapp = radical.context({
            filer = false, enable_keyboard = true, direction = "bottom", x = 80,
            y = screen[1].geometry.height - beautiful.wibox.height - ((#awful.util.table.keys(module.qapp))*beautiful.menu_height) - 28
        })
        for i,v in pairs(module.qapp) do
            module.menu_qapp:add_key_hook({}, string.lower(v.key), "press", function() run(v) end)
            --module.menu_qapp:add_key_binding({}, string.lower(v.key), function() dbg.dump(v.key) end)
            module.menu_qapp:add_item({
                button1 = function() run(v) end,
                text = i or "N/A", underlay = string.upper(v.key),
                icon = beautiful.path.."/launcher/quick/"..v.icon or beautiful.unknown
            })
        end
        common.reg_menu(module.menu_qapp)
    elseif module.menu_qapp.visible then
        common.hide_menu(module.menu_qapp)
    else
        common.show_menu(module.menu_qapp)
    end
end

-- Return widgets layout
local function new()
    local layout = wibox.layout.fixed.horizontal()
    layout:add(common.imagebox({icon=beautiful.dist_icon, b1=module.main_qapp, b3=module.main_app }))    
    layout:add(common.textbox({text="MENU", width=50, b1=module.main_qapp, b3=module.main_app }))
    return layout
end

return setmetatable(module, { __call = function(_, ...) return new(...) end })
